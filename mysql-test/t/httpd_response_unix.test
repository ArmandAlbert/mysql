# Test the unix socket support for httpd server:
#  check the main page for master and slave
#  check the /var
#  check the /var?var=
#  check the /health

--source include/master-slave.inc

echo Test the main page;

echo Check the master table headers;
exec /bin/bash -c "
    (echo -n -e 'GET /\r\n\r\n'; sleep 0.1)
    | nc.openbsd -U $MASTER_HTTPD_SOCKET
    | egrep ' <th>.*</th>' | sed 's/<[^>]*>/ /g'";

echo Check the binary log on the master;
exec /bin/bash -c "
    (echo -n -e 'GET /\r\n\r\n'; sleep 0.1)
    | nc.openbsd -U $MASTER_HTTPD_SOCKET
    | grep 'master-bin'
    | sed -r -e 's/<[^>]*>/ /g' -e 's/\.[0-9]+//'";

echo Check the slave connection on the master;
exec /bin/bash -c "
    (echo -n -e 'GET /\r\n\r\n'; sleep 0.1)
    | nc.openbsd -U $MASTER_HTTPD_SOCKET
    | grep 'Binlog Dump'
    | sed 's/<[^>]*>/ /g'";

echo Check the slave table headers;
exec /bin/bash -c "
    (echo -n -e 'GET /\r\n\r\n'; sleep 0.1)
    | nc.openbsd -U $SLAVE_HTTPD_SOCKET
    | egrep ' <th>.*</th>' | sed 's/<[^>]*>/ /g'
    | sed 's/<[^>]*>/ /g'";

echo Check the binary and relay logs on the slave;
exec /bin/bash -c "
    (echo -n -e 'GET /\r\n\r\n'; sleep 0.1)
    | nc.openbsd -U $SLAVE_HTTPD_SOCKET
    | egrep 'master-bin|slave-bin|slave-relay-bin'
    | sed -r -e 's/<[^>]*>/ /g' -e 's/\.[0-9]+ \/ [0-9]+//'";

echo Check the connection to the master;
exec /bin/bash -c "
    (echo -n -e 'GET /\r\n\r\n'; sleep 0.1)
    | nc.openbsd -U $SLAVE_HTTPD_SOCKET
    | grep 'Waiting for master to send event'
    | sed 's/<[^>]*>/ /g'";

echo Check for SQL and IO thread;
exec /bin/bash -c "
    (echo -n -e 'GET /\r\n\r\n'; sleep 0.1)
    | nc.openbsd -U $SLAVE_HTTPD_SOCKET
    | grep 'system user'
    | sed 's/<[^>]*>/ /g'";

echo Test the /var;
exec /bin/bash -c "
    (echo -n -e 'GET /var\r\n\r\n'; sleep 0.1)
    | nc.openbsd -U $MASTER_HTTPD_SOCKET
    | egrep '(status_uptime|status_queries|status_questions) '
    | sed 's/[0-9][0-9]*/NUMBER/g'";

exec /bin/bash -c "
    (echo -n -e 'GET /var?var=\r\n\r\n'; sleep 0.1)
    | nc.openbsd -U $MASTER_HTTPD_SOCKET
    | grep 'ContentLength: 0'";

exec /bin/bash -c "
    (echo -n -e 'GET /var?var=:\r\n\r\n'; sleep 0.1)
    | nc.openbsd -U $MASTER_HTTPD_SOCKET
    | grep 'ContentLength: 0'";

exec /bin/bash -c "
    (echo -n -e 'GET /var?var=:::\r\n\r\n'; sleep 0.1)
    | nc.openbsd -U $MASTER_HTTPD_SOCKET
    | grep 'ContentLength: 0'";

exec /bin/bash -c "
    (echo -n -e 'GET /var?var=status_uptime\r\n\r\n'; sleep 0.1)
    | nc.openbsd -U $MASTER_HTTPD_SOCKET
    | sed 's/[0-9][0-9]*/NUMBER/g'
    | sed '1,7 d'";

exec /bin/bash -c "
    (echo -n -e 'GET /var?var=status_uptime:\r\n\r\n'; sleep 0.1)
    | nc.openbsd -U $MASTER_HTTPD_SOCKET
    | sed 's/[0-9][0-9]*/NUMBER/g'
    | sed '1,7 d'";

exec /bin/bash -c "
    (echo -n -e 'GET /var?var=status_uptime:::\r\n\r\n'; sleep 0.1)
    | nc.openbsd -U $MASTER_HTTPD_SOCKET
    | sed 's/[0-9][0-9]*/NUMBER/g'
    | sed '1,7 d'";

exec /bin/bash -c "
    (echo -n -e 'GET /var?var=status_uptime:status_queries:status_questions\r\n\r\n'; sleep 0.1)
    | nc.openbsd -U $MASTER_HTTPD_SOCKET
    | sed 's/[0-9][0-9]*/NUMBER/g'
    | sed '1,7 d'";

echo Test the /health;
exec /bin/bash -c "(echo -n -e 'GET /health\r\n\r\n'; sleep 0.1)
    | nc.openbsd -U $MASTER_HTTPD_SOCKET
    | sed '1,7 d'";

--source include/rpl_end.inc
